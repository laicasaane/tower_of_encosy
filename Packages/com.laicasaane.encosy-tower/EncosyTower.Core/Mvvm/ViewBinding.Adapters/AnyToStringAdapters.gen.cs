/// <auto-generated>
///*************************************************************///
///                                                             ///
/// This file is auto-generated by AnyToStringAdaptersGenerator ///
///                 DO NOT manually modify it!                  ///
///                                                             ///
///*************************************************************///
/// </auto-generated>

#pragma warning disable

using System;
using EncosyTower.Annotations;
using EncosyTower.Variants;

namespace EncosyTower.Mvvm.ViewBinding.Adapters
{
    [Serializable]
    [Label("Byte ⇒ String", "Default")]
    [Adapter(sourceType: typeof(byte), destType: typeof(string), order: 0)]
    public sealed class ByteToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out byte result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

    [Serializable]
    [Label("SByte ⇒ String", "Default")]
    [Adapter(sourceType: typeof(sbyte), destType: typeof(string), order: 0)]
    public sealed class SByteToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out sbyte result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

    [Serializable]
    [Label("Char ⇒ String", "Default")]
    [Adapter(sourceType: typeof(char), destType: typeof(string), order: 0)]
    public sealed class CharToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out char result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

    [Serializable]
    [Label("Double ⇒ String", "Default")]
    [Adapter(sourceType: typeof(double), destType: typeof(string), order: 0)]
    public sealed class DoubleToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out double result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

    [Serializable]
    [Label("Float ⇒ String", "Default")]
    [Adapter(sourceType: typeof(float), destType: typeof(string), order: 0)]
    public sealed class FloatToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out float result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

    [Serializable]
    [Label("Int ⇒ String", "Default")]
    [Adapter(sourceType: typeof(int), destType: typeof(string), order: 0)]
    public sealed class IntToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out int result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

    [Serializable]
    [Label("UInt ⇒ String", "Default")]
    [Adapter(sourceType: typeof(uint), destType: typeof(string), order: 0)]
    public sealed class UIntToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out uint result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

    [Serializable]
    [Label("Long ⇒ String", "Default")]
    [Adapter(sourceType: typeof(long), destType: typeof(string), order: 0)]
    public sealed class LongToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out long result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

    [Serializable]
    [Label("ULong ⇒ String", "Default")]
    [Adapter(sourceType: typeof(ulong), destType: typeof(string), order: 0)]
    public sealed class ULongToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out ulong result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

    [Serializable]
    [Label("Short ⇒ String", "Default")]
    [Adapter(sourceType: typeof(short), destType: typeof(string), order: 0)]
    public sealed class ShortToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out short result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

    [Serializable]
    [Label("UShort ⇒ String", "Default")]
    [Adapter(sourceType: typeof(ushort), destType: typeof(string), order: 0)]
    public sealed class UShortToStringAdapter : IAdapter
    {
        public Variant Convert(in Variant variant)
        {
            if (variant.TryGetValue(out ushort result))
            {
                return result.ToString();
            }

            return variant;
        }
    }

}

